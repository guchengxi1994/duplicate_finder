// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.5.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'event.freezed.dart';

class CompareEvent {
  final String eventType;
  final double duration;

  const CompareEvent({
    required this.eventType,
    required this.duration,
  });

  @override
  int get hashCode => eventType.hashCode ^ duration.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CompareEvent &&
          runtimeType == other.runtimeType &&
          eventType == other.eventType &&
          duration == other.duration;
}

class DoneEvent {
  final String eventType;
  final bool isDone;

  const DoneEvent({
    required this.eventType,
    required this.isDone,
  });

  @override
  int get hashCode => eventType.hashCode ^ isDone.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is DoneEvent &&
          runtimeType == other.runtimeType &&
          eventType == other.eventType &&
          isDone == other.isDone;
}

@freezed
sealed class ResEvent with _$ResEvent {
  const ResEvent._();

  const factory ResEvent.scannerEvent(
    ScannerEvent field0,
  ) = ResEvent_ScannerEvent;
  const factory ResEvent.compareEvent(
    CompareEvent field0,
  ) = ResEvent_CompareEvent;
  const factory ResEvent.doneEvent(
    DoneEvent field0,
  ) = ResEvent_DoneEvent;
}

class ScannerEvent {
  final String eventType;
  final BigInt count;
  final double duration;

  const ScannerEvent({
    required this.eventType,
    required this.count,
    required this.duration,
  });

  @override
  int get hashCode => eventType.hashCode ^ count.hashCode ^ duration.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ScannerEvent &&
          runtimeType == other.runtimeType &&
          eventType == other.eventType &&
          count == other.count &&
          duration == other.duration;
}
